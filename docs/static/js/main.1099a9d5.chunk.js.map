{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","valorInput","setValorInput","onSubmit","event","preventDefault","trim","categorias","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","categoria","a","encodeURI","fetch","respuesta","json","data","gifs","map","imagen","images","original","useFetchGifs","imagenes","cargando","informacion","setInformacion","useEffect","then","GifGrid","elem","key","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MA6BeA,EA1BK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EACHC,mBAAU,IADP,mBACjCC,EADiC,KACrBC,EADqB,KAczC,OACI,0BAAMC,SARW,SAAEC,GACnBA,EAAMC,iBAEFJ,EAAWK,QAASP,GAAe,SAAEQ,GAAF,OAAoBN,GAApB,mBAAmCM,OAC1EL,EAAe,MAKX,mDACA,2BAAOM,KAAK,OAAOC,MAAQR,EAAaS,SAdtB,SAAEN,GACxBF,EAAeE,EAAMO,OAAOF,YCWrBG,EAfK,SAAC,GAAyB,EAAtBC,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAC/B,OACI,yBAAKC,UAAU,iDACX,yBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,2BAAKA,K,uBCSFK,EAhBF,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACNN,EADM,iDAC2CO,UAAWF,GADtD,+DAEYG,MAAOR,GAFnB,cAENS,EAFM,gBAGWA,EAAUC,OAHrB,uBAGJC,EAHI,EAGJA,KAEFC,EAAOD,EAAKE,KAAK,SAAEC,GAAa,IAAD,EACjC,MAAO,CACHhB,GAAIgB,EAAOhB,GACXC,MAAOe,EAAOf,MACdC,IAAG,UAAEc,EAAOC,cAAT,aAAE,EAAeC,SAAShB,QATzB,kBAaLY,GAbK,4CAAH,sDCaEK,EAVM,SAAEZ,GAAgB,IAAD,EACMpB,mBAAU,CAAEiC,SAAU,GAAIC,UAAU,IAD1C,mBAC1BC,EAD0B,KACbC,EADa,KAOlC,OAJAC,qBAAW,WACPlB,EAASC,GAAYkB,MAAM,SAAEX,GAAF,OAAYS,EAAgB,CAAEH,SAAUN,EAAMO,UAAU,SACpF,CAAEd,IAEEe,GCmBII,EAxBC,SAAC,GAAqB,IAAlBnB,EAAiB,EAAjBA,UAAiB,EACFY,EAAcZ,GAArCa,EADyB,EACzBA,SAAUC,EADe,EACfA,SAElB,OACI,oCACI,wBAAIlB,UAAU,oDAAqDI,GAEnE,uBAAGJ,UAAU,YAAckB,GAAY,eAEvC,yBAAKlB,UAAU,aAEPiB,EAASL,KAAK,SAAEY,GACZ,OAAO,kBAAC,EAAD,eAAaC,IAAMD,EAAK3B,IAAU2B,UCOlDE,EApBM,WAAO,IAAD,EACe1C,mBAAU,CAAE,aAD3B,mBACfO,EADe,KACHR,EADG,KAGvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,4BAEQQ,EAAWqB,KAAK,SAAEY,GACd,OAAO,kBAAC,EAAD,CAASC,IAAMD,EAAOpB,UAAYoB,U,YCVjEG,IAASC,OAAQ,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.1099a9d5.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ( { setCategorias } ) => {\r\n    const [ valorInput, setValorInput ] = useState( '' );\r\n\r\n    const handleInputChange = ( event ) => {\r\n        setValorInput( event.target.value );\r\n    };\r\n\r\n    const handleSubmit = ( event ) => {\r\n        event.preventDefault();\r\n\r\n        if( valorInput.trim() ) setCategorias( ( categorias ) => [ valorInput, ...categorias ] ); \r\n        setValorInput( '' );\r\n    };\r\n\r\n    return (       \r\n        <form onSubmit={ handleSubmit }>\r\n            <span>Buscar categoria:</span>\r\n            <input type=\"text\" value={ valorInput } onChange={ handleInputChange }/>\r\n        </form>\r\n    )\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst GifGridItem = ( { id, title, url } ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeftBig\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nGifGridItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGridItem;\r\n","const getGifs = async( categoria ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( categoria ) }&limit=10&api_key=hGGR7G2E7Sa78gB2fGLC2L95qRIt2lN2`;\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( ( imagen ) => {\r\n        return {\r\n            id: imagen.id,\r\n            title: imagen.title,\r\n            url: imagen.images?.original.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n}\r\n\r\nexport default getGifs;\r\n","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs';\r\n\r\nconst useFetchGifs = ( categoria ) => {\r\n    const [ informacion, setInformacion ] = useState( { imagenes: [], cargando: true } );\r\n\r\n    useEffect( () => {\r\n        getGifs( categoria ).then( ( gifs ) => setInformacion( { imagenes: gifs, cargando: false } ) );        \r\n    }, [ categoria ] );\r\n\r\n    return informacion;\r\n};\r\n\r\nexport default useFetchGifs;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport GifGridItem from './GifGridItem';\r\nimport useFetchGifs from '../hooks/useFetchGifs';\r\n\r\nconst GifGrid = ( { categoria } ) => {\r\n    const { imagenes, cargando } = useFetchGifs( categoria );\r\n\r\n    return (\r\n        <>  \r\n            <h3 className=\"centrado animate__animated animate__jackInTheBox\">{ categoria }</h3>\r\n\r\n            <p className=\"centrado\">{  cargando && 'Cargando...' }</p>\r\n\r\n            <div className=\"card-grid\">            \r\n                {\r\n                    imagenes.map( ( elem ) => {\r\n                        return <GifGridItem key={ elem.id } { ...elem } />\r\n                    } )\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nGifGrid.propTypes = {\r\n    categoria: PropTypes.string.isRequired\r\n}\r\n\r\nexport default GifGrid;\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n    const [ categorias, setCategorias ] = useState( [ 'Vikingos' ] );\r\n\r\n    return (\r\n        <>\r\n            <h1>GifExpertApp</h1>\r\n            <AddCategory setCategorias={ setCategorias } />\r\n            <hr/>\r\n\r\n            <ol>\r\n                {\r\n                    categorias.map( ( elem ) => {\r\n                        return <GifGrid key={ elem } categoria={ elem } />\r\n                    } ) \r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GifExpertApp from './GifExpertApp';\r\nimport 'animate.css';\r\nimport './index.css';\r\n\r\nReactDOM.render( <GifExpertApp />, document.getElementById('root') );\r\n"],"sourceRoot":""}